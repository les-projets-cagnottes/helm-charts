apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "les-projets-cagnottes.fullname" . }}-web
  labels:
    {{- include "les-projets-cagnottes.labels" . | nindent 4 }}
    component: web
spec:
  {{- if not .Values.web.autoscaling.enabled }}
  replicas: {{ .Values.web.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "les-projets-cagnottes.selectorLabels" . | nindent 6 }}
      component: web
  template:
    metadata:
      {{- with .Values.web.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "les-projets-cagnottes.selectorLabels" . | nindent 8 }}
        component: web
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "les-projets-cagnottes.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.web.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.web.securityContext | nindent 12 }}
          image: "{{ .Values.web.image.repository }}:{{ .Values.web.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.web.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.web.containerPort }}
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /usr/share/nginx/html/fr/assets/config.json
              subPath: "config.json"
            - name : img
              mountPath : /usr/share/nginx/html/fr/assets/img
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          env:
            - name: PORT
              value: "{{ .Values.web.containerPort }}"
            {{- range .Values.web.secretsEnv }}
              {{- $secretName := .secretName }}
              {{- range $key, $value :=  .env }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ $secretName }}
                  key: {{ $value }}
              {{- end }}
            {{- end }}
            {{- range $key, $value := .Values.web.env }}
            - name: "{{ $key }}"
              value: "{{ $value }}"
            {{- end }}
          resources:
            {{- toYaml .Values.web.resources | nindent 12 }}
      volumes:
        - name: config
          configMap:
            name: {{ include "les-projets-cagnottes.fullname" . }}-web
        - name: img
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.img.existingClaim | default (include "les-projets-cagnottes.fullname" .) }}-img
      {{- with .Values.web.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.web.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.web.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
