# Default values for les-projets-cagnottes.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

api:

  replicaCount: 1

  image:
    repository: lesprojetscagnottes/api
    pullPolicy: IfNotPresent
    tag: "0.9.0"

  containerPort: 8080

  service:
    type: ClusterIP
    port: 80

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 4
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  env: {}
    # SPRING_JPA_HIBERNATE_DDL-AUTO: update
    # LOGGING_LEVEL_FR_LESPROJETSCAGNOTTES: INFO

  secretsEnv: []
    # - secretName: ""
    #   env:
    #     FOO: barKey

  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

web:
  replicaCount: 1

  image:
    repository: lesprojetscagnottes/web
    pullPolicy: IfNotPresent
    tag: "0.9.0"

  containerPort: 80

  url: "http://les-projets-cagnottes.localhost"
  config: |-
    {
      "webUrl": "http://les-projets-cagnottes.localhost",
      "apiUrl": "http://les-projets-cagnottes.localhost/api",
      "slackClientId": "",
      "version": "0.7.2",
      "versionUrl": "https://github.com/les-projets-cagnottes/"
    }

  service:
    type: ClusterIP
    port: 80

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 4
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
    
  nodeSelector: {}

  tolerations: []

  affinity: {}

slackEventsCatcher:

  replicaCount: 1

  image:
    repository: lesprojetscagnottes/slack-events-catcher
    pullPolicy: IfNotPresent
    tag: "0.5.3"

  containerPort: 3000

  service:
    type: ClusterIP
    port: 80

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 4
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  env: {}
    # SPRING_JPA_HIBERNATE_DDL-AUTO: update
    # LOGGING_LEVEL_FR_LESPROJETSCAGNOTTES: INFO

  secretsEnv: []
    # - secretName: ""
    #   env:
    #     FOO: barKey

  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: les-projets-cagnottes.localhost
      paths:
      - path: /
        backend:
          serviceName: les-projets-cagnottes-web
          servicePort: 80
      - path: /api/
        backend:
          serviceName: les-projets-cagnottes-api
          servicePort: 80
      # - path: /slack/
      #   backend:
      #     serviceName: les-projets-cagnottes-slack-events-catcher
      #     servicePort: 80
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# Must be enabled in order to make slack-events-catcher to work
persistence: {}
  # enabled: true
  # accessMode: ReadWriteOnce
  # size: 512Mi

db:
  url: jdbc:postgresql://lesprojetscagnottes-postgresql:5432/lesprojetscagnottes
  # existingSecret:
  #   name: db-lesprojetscagnottes
  #   usernameKey: username
  #   passwordKey: password

postgresql:
  enabled: true
  fullnameOverride: lesprojetscagnottes-postgresql
  postgresqlUsername: lesprojetscagnottes
  postgresqlPassword: lesprojetscagnottes
  postgresqlDatabase: lesprojetscagnottes

slack: {}
  # enabled: true
  # existingSecret:
  #   name: les-projets-cagnottes-slack
  #   clientIdKey: clientId
  #   clientSecretKey: clientSecret
  #   signingSecretKey: signingSecret
